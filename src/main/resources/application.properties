spring.application.name=ToDo

# PORT
        server.port=8080


        server.jsp-servlet.init-parameters.development=true

# logging  DEBUG INFO TRACE WARN
        logging.level.org.springboot=INFO
        logging.level.springboot.ToDo.Services=INFO
        logging.level.springboot.ToDo.Controller=INFO
        logging.level.springboot.ToDo.Services.*=INFO
        logging.level.springboot.ToDo.Controller.*=INFO
        logging.level.root=INFO
        logging.file.name=log/myapp.log
        logging.file.max-size=10MB
        logging.file.max-history=1111

# JSP / View Resolver           /WEB-INF/jsp/  <-------  MUST ADD --- > last "/"
        spring.mvc.view.prefix=/WEB-INF/jsp/
        spring.mvc.view.suffix=.jsp

# Actuator
        management.endpoints.web.exposure.include=*

# Profile
        spring.profiles.active=UAT

# DATE Format
        spring.mvc.format.date=dd-MM-yyyy

# 1st connection
# dB MySQL connection via JPA
# SQL + H2 same strings used
        spring.datasource.url=jdbc:mysql://localhost:3306/sumit
        spring.datasource.username=root
        spring.datasource.password=1029
        spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver
        spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect

## 2nd connection
## H2 db
# I used the same connection string for H2 <---- = SQL strings above
#        spring.datasource.h2.url=jdbc:h2:mem:sumit
#        spring.datasource.h2.driverClassName=org.h2.Driver
#        spring.datasource.h2.username=sa
#        spring.datasource.h2.password=password

##### this will take src/main/resources/schema.sql file to init our db into sql, so we need this.
        #       1.""spring.jpa.hibernate.ddl-auto""           for controlling how Hibernate handles schema,
        #       2.""spring.datasource.initialization-mode""   for specifying initialization mode, and
        #       3.""spring.datasource.schema                  for specifying the location of the schema file.
        #       These properties allow customization of schema generation and database initialization processes.
        #       if I keep this value--->"update", then schema.sql file will automatically created...
        ##      'script' must not be null or empty error so put ";" only there
        #       spring.sql.init.mode=always
        spring.jpa.defer-datasource-initialization=true
        #       This property controls how Hibernate handles the database schema. Possible values include:

        # this is the path where the sql exist to be execuated
        spring.datasource.data=classpath:data.sql
        spring.datasource.schema=sumit
        spring.sql.init.mode=always



# JPA:
# Application.properties for JPA, this shows generated SQLs
# example: Hibernate: select c1_0.id,c1_0.author,c1_0.name from course c1_0 where c1_0.id=?
# JPA Configuration

        spring.jpa.hibernate.ddl-auto=update
        spring.jpa.show-sql=true


# Attachment
        # upload settings ref: https://www.baeldung.com/spring-file-upload
        # We can also control whether file uploading is enabled and the location for file upload:
        ## MULTIPART (MultipartProperties)
        # Enable multipart uploads
        spring.servlet.multipart.enabled=true
        #        spring.servlet.multipart.location=D:
        # If we want to control the maximum file upload size
        # Max file size.
        spring.servlet.multipart.max-file-size=2MB
        # Max Request Size
        spring.servlet.multipart.max-request-size=5MB
        # Threshold after which files are written to disk.
        spring.servlet.multipart.file-size-threshold=700KB





