--- schema.sql: Spring Boot provides a mechanism to customize the database schema generation process.
--- If you want to override the default schema generation strategy or include additional SQL statements,
--- you can create a file named schema.sql in the src/main/resources directory of your project.
--- The SQL statements in this file will be executed after Hibernate's auto-generated schema creation.*
--- So, in summary, the schema.sql file is not automatically generated by Spring Boot itself;
--- rather, it's a place where you can provide custom SQL DDL statements to supplement or override the schema generated by Hibernate.
--- If you don't provide a schema.sql file, Spring Boot will still generate the necessary schema based on your entity classes.
---  if I write here anything it will automatically get executed...
--- if I keep this "update" this file will automatically created
--- spring.jpa.hibernate.ddl-auto=update

CREATE DATABASE IF NOT EXISTS sumit;
use sumit;
CREATE TABLE  IF NOT EXISTS todoh (
  ---UID int NOT NULL AUTO_INCREMENT,
  id int NOT NULL,
  attach mediumblob,
  creation_date date DEFAULT NULL,
  description varchar(20) DEFAULT NULL,
  done bit(1) DEFAULT NULL,
  target_date date DEFAULT NULL,
  username varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
);



--- Below SQL insert cmd lines moved to <data.sql> file.
--- This is easily configurable at application.properties >>>  spring.datasource.data=classpath:data.sql
INSERT INTO sumit.todoh (id, creation_date, description, done, target_date, username)
        VALUES (FLOOR(RAND() * (1000 - 1 + 1)) + 1, "2024-01-20", "schema.sql_ADDED", false, "2029-05-04", "KK@sumit.com");




